{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,aACjCC,EAAkBH,EAAQE,cAAc,UAE9CJ,EAAAM,OAAOC,KAAK,CACVC,SAAU,OACVC,cAAc,EACdC,kBAAmB,aACnBC,SAAU,OACVC,MAAO,IACPC,QAAS,CACPC,WAAY,aAIhB,MAAMC,EAAgB,CAACC,EAAUJ,IAC/B,IAAIK,SAAQ,CAACC,EAASC,KACpB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,IA4BPY,EAA0B,KAC9BnB,EAAgBoB,gBAAgB,WAAW,EAS7CvB,EAAQwB,iBAAiB,UANJC,IACnBA,EAAMC,iBA9BoB,GAAGhB,MAAAiB,EAAKC,KAAEA,EAAIC,OAAEA,MAC1C,IAAIC,EAAiBH,EAErB,IAAK,IAAII,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChClB,EAAckB,EAAGD,GACdE,MAAK,EAAClB,SAAEA,EAAQJ,MAAEA,MACjBZ,EAAAM,OAAO6B,QAAQ,qBAAqBnB,QAAeJ,MAAU,IAE9DwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBZ,EAAAM,OAAOO,QAAQ,oBAAoBG,QAAeJ,MAAU,IAE7DyB,SAAQ,KACHJ,IAAMF,GAAQP,GAAyB,IAG/CQ,GAAkBF,C,EAgBpBQ,CAZsB,GAAC1B,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,MAAc,CACpDnB,MAAO2B,OAAO3B,EAAM4B,OACpBV,KAAMS,OAAOT,EAAKU,OAClBT,OAAQQ,OAAOR,EAAOS,SASFC,CAAgBd,EAAMe,cAAcC,WACxDnB,GAAyB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form.form');\nconst submitButtonRef = formRef.querySelector('button');\n\nNotify.init({\n  distance: '20px',\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n  fontSize: '14px',\n  delay: 4000,\n  failure: {\n    background: '#ff4432',\n  },\n});\n\nconst createPromise = (position, delay) =>\n  new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\nconst createPromisesQueue = ({ delay, step, amount }) => {\n  let iterationDelay = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, iterationDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        if (i === amount) toggleSubmitButtonState();\n      });\n\n    iterationDelay += step;\n  }\n};\n\nconst collectFormData = ({ delay, step, amount }) => ({\n  delay: Number(delay.value),\n  step: Number(step.value),\n  amount: Number(amount.value),\n});\n\nconst toggleSubmitButtonState = () => {\n  submitButtonRef.toggleAttribute('disabled');\n};\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  createPromisesQueue(collectFormData(event.currentTarget.elements));\n  toggleSubmitButtonState();\n};\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$submitButtonRef","Notify","init","distance","clickToClose","cssAnimationStyle","fontSize","delay","failure","background","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$toggleSubmitButtonState","toggleAttribute","addEventListener","event","preventDefault","delay1","step","amount","iterationDelay","i","then","success","catch","finally","$47d4ff9957288465$var$createPromisesQueue","Number","value","$47d4ff9957288465$var$collectFormData","currentTarget","elements"],"version":3,"file":"03-promises.f0f1e8b2.js.map"}