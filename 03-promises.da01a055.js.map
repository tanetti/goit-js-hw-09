{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,mBCNLgB,EAAUC,SAASC,cAAc,aAEvCC,EAAAC,OAAOC,KAAK,CACVC,SAAU,OACVC,cAAc,EACdC,kBAAmB,aACnBC,SAAU,OACVC,MAAO,IACPC,QAAS,CACPC,WAAY,aAIhB,IAgFMC,EAAmB,IAAtB,W,sBAhFGC,I,aAEFC,KAAKC,KAAO,KACZD,KAAKL,MAAQ,KACbK,KAAKE,KAAO,KACZF,KAAKG,OAAS,I,iBAGhBvB,IAAA,Q,MAAA,SAAMqB,GACJD,KAAKC,KAAOA,EACPD,KAAKC,MAKVD,KAAKI,kBACAJ,KAAKL,MAILK,KAAKE,KAILF,KAAKG,QAKVH,KAAKK,0BACLL,KAAKM,uBALHlB,EAAAC,OAAOO,QAAQ,2BAJfR,EAAAC,OAAOO,QAAQ,yBAJfR,EAAAC,OAAOO,QAAQ,2BANfR,EAAAC,OAAOO,QAAQ,yB,IAsBnBhB,IAAA,kB,MAAA,W,WACmB,IAAI2B,SAASP,KAAKC,MAE1BO,SAAQ,SAAC1C,EAAOc,GACvB6B,EAAK7B,GAAO8B,OAAO5C,E,OAIvBc,IAAA,0B,MAAA,WAC0BoB,KAAKC,KAAKd,cAAc,mBAChCwB,gBAAgB,W,IAGlC/B,IAAA,sB,MAAA,WAGE,I,iCACE6B,EAAKG,cAActC,EAAGuC,GACnBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUrB,EAAKoB,EAALpB,MACjBP,EAAAC,OAAO4B,QAAQ,qBAAoCC,OAAfF,EAAS,QAAYE,OAANvB,EAAM,M,IAE1DwB,OAAM,SAAAJ,G,IAAGC,EAAQD,EAARC,SAAUrB,EAAKoB,EAALpB,MAClBP,EAAAC,OAAOO,QAAQ,oBAAmCsB,OAAfF,EAAS,QAAYE,OAANvB,EAAM,M,IAEzDyB,SAAQ,WACH9C,IAAM+C,EAAKlB,QAAQkB,EAAKhB,yB,IAGhCQ,GAAkBJ,EAAKP,I,EAdrBW,EAAiBb,KAAKL,MAEjB2B,EAAI,EAAGA,GAAKtB,KAAKG,OAAQmB,GAAK,EAACC,EAAAD,E,IAgB1C1C,IAAA,gB,MAAA,SAAcoC,EAAUrB,GACtB,OAAO,IAAI6B,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAET,WAAUrB,UAEpB+B,EAAO,CAAEV,WAAUrB,S,GAEpBA,E,UAKN,IAOHV,EAAQ8C,iBAAiB,UALJ,SAAAC,GACnBA,EAAMC,iBACNnC,EAAiBoC,MAAMF,EAAMG,c","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form.form');\n\nNotify.init({\n  distance: '20px',\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n  fontSize: '14px',\n  delay: 4000,\n  failure: {\n    background: '#ff4432',\n  },\n});\n\nclass PromiseGenerator {\n  constructor() {\n    this.form = null;\n    this.delay = null;\n    this.step = null;\n    this.amount = null;\n  }\n\n  start(form) {\n    this.form = form;\n    if (!this.form) {\n      Notify.failure('Target Form not found!');\n      return;\n    }\n\n    this.collectFormData();\n    if (!this.delay) {\n      Notify.failure('Delay value not found!');\n      return;\n    }\n    if (!this.step) {\n      Notify.failure('Step value not found!');\n      return;\n    }\n    if (!this.amount) {\n      Notify.failure('Amount value not found!');\n      return;\n    }\n\n    this.toggleSubmitButtonState();\n    this.createPromisesQueue();\n  }\n\n  collectFormData() {\n    const formData = new FormData(this.form);\n\n    formData.forEach((value, key) => {\n      this[key] = Number(value);\n    });\n  }\n\n  toggleSubmitButtonState() {\n    const submitButtonRef = this.form.querySelector('[type=\"submit\"]');\n    submitButtonRef.toggleAttribute('disabled');\n  }\n\n  createPromisesQueue() {\n    let iterationDelay = this.delay;\n\n    for (let i = 1; i <= this.amount; i += 1) {\n      this.createPromise(i, iterationDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        })\n        .finally(() => {\n          if (i === this.amount) this.toggleSubmitButtonState();\n        });\n\n      iterationDelay += this.step;\n    }\n  }\n\n  createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n}\n\nconst promiseGenerator = new PromiseGenerator();\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  promiseGenerator.start(event.currentTarget);\n};\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$ce04d3a99e08e73b$var$formRef","document","querySelector","$h6c0i","Notify","init","distance","clickToClose","cssAnimationStyle","fontSize","delay","failure","background","$ce04d3a99e08e73b$var$promiseGenerator","PromiseGenerator","this","form","step","amount","collectFormData","toggleSubmitButtonState","createPromisesQueue","FormData","forEach","_this","Number","toggleAttribute","createPromise","iterationDelay","then","param","position","success","concat","catch","finally","_this1","i1","_loop","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","start","currentTarget"],"version":3,"file":"03-promises.da01a055.js.map"}