{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,aACjCC,EAAkBH,EAAQE,cAAc,UAE9CJ,EAAAM,OAAOC,KAAK,CACVC,SAAU,OACVC,cAAc,EACdC,kBAAmB,aACnBC,SAAU,OACVC,MAAO,IACPC,QAAS,CACPC,WAAY,aAIhB,IAcMC,EAAsB,SAAAC,GAG1B,I,kBAjBoB,IAACC,EAAUL,GAAVK,EAkBLC,EAlBeN,EAkBZO,EAjBZ,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEJ,WAAUL,UAEpBU,EAAO,CAAEL,WAAUL,S,GAEpBA,E,KASAe,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUL,EAAKgB,EAALhB,MACjBZ,EAAAM,OAAOuB,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANlB,EAAM,M,IAE1DmB,OAAM,SAAAH,G,IAAGX,EAAQW,EAARX,SAAUL,EAAKgB,EAALhB,MAClBZ,EAAAM,OAAOO,QAAQ,oBAAmCiB,OAAfb,EAAS,QAAYa,OAANlB,EAAM,M,IAEzDoB,SAAQ,WACHd,IAAMe,GAAQC,G,IAGtBf,GAAkBgB,C,EAfSC,EAAKpB,EAALJ,MAAOuB,EAAInB,EAAJmB,KAAMF,EAAMjB,EAANiB,OACtCd,EAAiBiB,EAEZC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAACC,EAAAD,E,EAsB/BH,EAA0B,WAC9B7B,EAAgBkC,gBAAgB,W,EASlCrC,EAAQsC,iBAAiB,UANJ,SAAAC,GAVG,IAAAC,EAWtBD,EAAME,iBACN5B,GAZsB2B,EAYcD,EAAMG,cAZX,CAC/BhC,MAAOiC,OAAOH,EAAK9B,MAAMkC,OACzBX,KAAMU,OAAOH,EAAKP,KAAKW,OACvBb,OAAQY,OAAOH,EAAKT,OAAOa,UAU3BZ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form.form');\nconst submitButtonRef = formRef.querySelector('button');\n\nNotify.init({\n  distance: '20px',\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n  fontSize: '14px',\n  delay: 4000,\n  failure: {\n    background: '#ff4432',\n  },\n});\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst createPromisesQueue = ({ delay, step, amount }) => {\n  let iterationDelay = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, iterationDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally(() => {\n        if (i === amount) toggleSubmitButtonState();\n      });\n\n    iterationDelay += step;\n  }\n};\n\nconst collectFormData = form => ({\n  delay: Number(form.delay.value),\n  step: Number(form.step.value),\n  amount: Number(form.amount.value),\n});\n\nconst toggleSubmitButtonState = () => {\n  submitButtonRef.toggleAttribute('disabled');\n};\n\nconst onFormSubmit = event => {\n  event.preventDefault();\n  createPromisesQueue(collectFormData(event.currentTarget));\n  toggleSubmitButtonState();\n};\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$submitButtonRef","Notify","init","distance","clickToClose","cssAnimationStyle","fontSize","delay","failure","background","$ce04d3a99e08e73b$var$createPromisesQueue","param1","position","i","iterationDelay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","success","concat","catch","finally","amount","$ce04d3a99e08e73b$var$toggleSubmitButtonState","step","delay1","i1","_loop","toggleAttribute","addEventListener","event","form","preventDefault","currentTarget","Number","value"],"version":3,"file":"03-promises.2dcb5bde.js.map"}